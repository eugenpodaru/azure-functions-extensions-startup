trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

variables:
  buildConfiguration: 'Release'

steps:
- task: gitversion/setup@0
  displayName: 'install gitversion'
  inputs:
    versionSpec: '5.x'

- task: DotNetCoreCLI@2
  displayName: 'dotnet gitversion'
  inputs:
    command: 'custom'
    custom: 'gitversion'
    arguments: '/targetpath "$(Build.SourcesDirectory)" /output buildserver /updateprojectfiles'

- task: DotNetCoreCLI@2
  displayName: 'dotnet build'
  inputs:
    command: 'build'
    projects: '**/src/Functions.Extensions.Startup/Functions.Extensions.Startup.csproj'
    arguments: '--configuration $(buildConfiguration)'

- task: DotNetCoreCLI@2
  displayName: 'dotnet test'
  inputs:
    command: 'test'
    projects: '**/test/Functions.Extensions.Startup.Tests/Functions.Extensions.Startup.Tests.csproj'

- task: DotNetCoreCLI@2
  displayName: "dotnet pack"
  inputs:
    command: 'pack'
    packagesToPack: '**/src/Functions.Extensions.Startup/Functions.Extensions.Startup.csproj'
    packDirectory: '$(Pipeline.Workspace)'
    nobuild: true
    includesymbols: true
    versioningScheme: 'byEnvVar'
    versionEnvVar: 'GitVersion.NuGetVersion'

- task: PublishPipelineArtifact@1
  displayName: 'publish artifact'
  inputs:
    targetPath: '$(Pipeline.Workspace)'
    artifact: 'azure-functions-extensions-startup'
    publishLocation: 'pipeline'